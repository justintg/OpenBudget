<UserControl x:Class="OpenBudget.Presentation.Windows.Controls.BudgetEditor.BudgetEditorCategoryMonth"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:OpenBudget.Presentation.Windows.Controls.BudgetEditor" 
             xmlns:ctrls="clr-namespace:OpenBudget.Presentation.Windows.Controls"
             xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:Converters="http://metro.mahapps.com/winfx/xaml/controls" xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             >
    <UserControl.Resources>
        <Style TargetType="{x:Type ctrls:PopupButton}" x:Key="CategoryMonthNoteButton">
            <Setter Property="Content" Value="{Binding}" />
            <Setter Property="OpenPreference" Value="Bottom" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Padding" Value="0 0 0 0"/>
            <Setter Property="PopupMargin" Value="-10 -7 0 0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ctrls:PopupButton">
                        <Border Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}">
                            <iconPacks:PackIconMaterialLight Kind="Note"
                                                             Width="10"
                                                             Margin="3 0 0 0"
                                                         VerticalAlignment="Center"
                                                         Foreground="{TemplateBinding Foreground}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="PopupTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Grid Width="300" Margin="0 0 5 5">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="155" />
                            </Grid.RowDefinitions>

                            <Path Grid.Row="0" Margin="3 0 0 -1" Data="M 0,15 L 15,0 30,15 Z" Fill="LightBlue">
                            </Path>

                            <Border Grid.Row="1" Background="LightBlue" CornerRadius="5">
                                <Border.Effect>
                                    <DropShadowEffect Opacity="0.5"/>
                                </Border.Effect>
                            </Border>
                            <Grid Grid.Row="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <TextBox Margin="10 12 10 0" x:Name="focusElement"
                                         Height="100"
                                         Text="{Binding NewNoteText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                         TextOptions.TextFormattingMode="Display"
                                         TextWrapping="NoWrap"
                                         VerticalScrollBarVisibility="Auto"
                                         HorizontalScrollBarVisibility="Auto"
                                         AcceptsReturn="True"/>
                                <Button Content="Save Note" Grid.Row="1" Command="{Binding SaveCategoryNoteCommand}" HorizontalAlignment="Left" Margin="10 5 10 0" />
                            </Grid>

                        </Grid>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="AmountBudgetedTextboxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Control.Background}" />
            <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.TextBox.Border}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="CaretBrush" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
            <Setter Property="ContextMenu" Value="{DynamicResource MahApps.TextBox.ContextMenu}" />
            <Setter Property="Controls:ControlsHelper.FocusBorderBrush" Value="{DynamicResource MahApps.Brushes.TextBox.Border.Focus}" />
            <Setter Property="Controls:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource MahApps.Brushes.TextBox.Border.MouseOver}" />
            <Setter Property="Controls:TextBoxHelper.ButtonFontSize" Value="{DynamicResource MahApps.Font.Size.Button.ClearText}" />
            <Setter Property="Controls:TextBoxHelper.ButtonWidth" Value="22" />
            <Setter Property="Controls:TextBoxHelper.IsMonitoring" Value="True" />
            <Setter Property="Controls:TextBoxHelper.IsSpellCheckContextMenuEnabled" Value="{Binding RelativeSource={RelativeSource Self}, Path=(SpellCheck.IsEnabled)}" />
            <Setter Property="Controls:TextBoxHelper.WatermarkWrapping" Value="{Binding RelativeSource={RelativeSource Self}, Path=TextWrapping, Mode=OneWay}" />
            <Setter Property="Controls:TextBoxHelper.ButtonsAlignment" Value="Left" />
            <Setter Property="FontFamily" Value="{DynamicResource MahApps.Fonts.Family.Control}" />
            <Setter Property="FontSize" Value="{DynamicResource MahApps.Font.Size.Content}" />
            <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Text}" />
            <Setter Property="MinHeight" Value="26" />
            <Setter Property="Padding" Value="4" />
            <Setter Property="SelectionBrush" Value="{DynamicResource MahApps.Brushes.Highlight}" />
            <!--  change SnapsToDevicePixels to True to view a better border and validation error  -->
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <AdornerDecorator x:Name="PART_WaitingForDataEffectAdornerDecorator" Visibility="Collapsed">
                                <Border x:Name="PART_WaitingForDataEffectGrid"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="Transparent"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding Controls:ControlsHelper.CornerRadius}"
                                    Effect="{DynamicResource MahApps.DropShadowEffect.WaitingForData}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </AdornerDecorator>

                            <Border x:Name="Base"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding Controls:ControlsHelper.CornerRadius}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                            <Grid x:Name="PART_InnerGrid" Margin="{TemplateBinding BorderThickness}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="TextColumn" Width="*" />
                                    <ColumnDefinition x:Name="ButtonColumn" Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition x:Name="ButtonRow" Height="*" />
                                </Grid.RowDefinitions>

                                <!--<iconPacks:PackIconMaterialLight
                                                         Grid.Column="0"
                                                         Grid.Row="0"
                                                         Grid.RowSpan="2"
                                    RenderOptions.EdgeMode="Unspecified"
                 RenderOptions.BitmapScalingMode="HighQuality"
                                    
                                                         Kind="Note"
                                                         VerticalAlignment="Center"
                                                         Foreground="{TemplateBinding Foreground}"/>-->

                                <ctrls:PopupButton Style="{StaticResource CategoryMonthNoteButton}"
                                                   Grid.Column="0"
                                                         Grid.Row="0"
                                                         Grid.RowSpan="2"/>

                                <ScrollViewer x:Name="PART_ContentHost"
                                          Grid.Row="1"
                                          Grid.Column="0"
                                          Margin="0"
                                          Padding="{TemplateBinding Padding}"
                                          VerticalAlignment="Stretch"
                                          Background="{x:Null}"
                                          BorderThickness="0"
                                          IsTabStop="False"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                                <TextBlock x:Name="PART_Message"
                                       Grid.Row="1"
                                       Grid.Column="0"
                                       Margin="4 0"
                                       Padding="{TemplateBinding Padding}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Foreground="{TemplateBinding Foreground}"
                                       Style="{DynamicResource MahApps.Styles.TextBlock.Watermark}"
                                       Text="{TemplateBinding Controls:TextBoxHelper.Watermark}"
                                       TextAlignment="{TemplateBinding Controls:TextBoxHelper.WatermarkAlignment}"
                                       TextTrimming="{TemplateBinding Controls:TextBoxHelper.WatermarkTrimming}"
                                       TextWrapping="{TemplateBinding Controls:TextBoxHelper.WatermarkWrapping}"
                                       Visibility="Collapsed" />

                                <ContentControl x:Name="PART_FloatingMessageContainer"
                                            Grid.Row="0"
                                            Grid.Column="0"
                                            Margin="4 0"
                                            Style="{DynamicResource MahApps.Styles.ContentControl.FloatingMessageContainer}">
                                    <ContentControl.Height>
                                        <MultiBinding Converter="{Converters:MathMultiplyConverter}">
                                            <Binding ElementName="PART_FloatingMessage"
                                                 Mode="OneWay"
                                                 Path="ActualHeight" />
                                            <Binding ElementName="PART_FloatingMessageContainer"
                                                 Mode="OneWay"
                                                 Path="Opacity" />
                                        </MultiBinding>
                                    </ContentControl.Height>
                                    <TextBlock x:Name="PART_FloatingMessage"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                           Foreground="{TemplateBinding Foreground}"
                                           Style="{DynamicResource MahApps.Styles.TextBlock.AutoCollapsing}"
                                           Text="{TemplateBinding Controls:TextBoxHelper.Watermark}"
                                           TextAlignment="{TemplateBinding Controls:TextBoxHelper.WatermarkAlignment}"
                                           TextTrimming="{TemplateBinding Controls:TextBoxHelper.WatermarkTrimming}">
                                        <TextBlock.RenderTransform>
                                            <TranslateTransform x:Name="FloatingMessageTransform">
                                                <TranslateTransform.Y>
                                                    <MultiBinding Converter="{Converters:MathSubtractConverter}">
                                                        <Binding ElementName="PART_FloatingMessage"
                                                             Mode="OneWay"
                                                             Path="ActualHeight" />
                                                        <Binding ElementName="PART_FloatingMessageContainer"
                                                             Mode="OneWay"
                                                             Path="ActualHeight" />
                                                    </MultiBinding>
                                                </TranslateTransform.Y>
                                            </TranslateTransform>
                                        </TextBlock.RenderTransform>
                                    </TextBlock>
                                </ContentControl>

                                <Button x:Name="PART_ClearText"
                                    Grid.Row="0"
                                    Grid.RowSpan="2"
                                    Grid.Column="1"
                                    Width="{TemplateBinding Controls:TextBoxHelper.ButtonWidth}"
                                    Controls:TextBoxHelper.IsClearTextButtonBehaviorEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:TextBoxHelper.ClearTextButton), Mode=OneWay}"
                                    Content="{TemplateBinding Controls:TextBoxHelper.ButtonContent}"
                                    ContentTemplate="{TemplateBinding Controls:TextBoxHelper.ButtonContentTemplate}"
                                    Focusable="False"
                                    FontFamily="{TemplateBinding Controls:TextBoxHelper.ButtonFontFamily}"
                                    FontSize="{TemplateBinding Controls:TextBoxHelper.ButtonFontSize}"
                                    Foreground="{TemplateBinding Foreground}"
                                    IsTabStop="False"
                                    Style="{DynamicResource MahApps.Styles.Button.Chromeless}"
                                    Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:TextBoxHelper.ClearTextButton), Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            </Grid>

                            <Border x:Name="DisabledVisualElement"
                                Background="{DynamicResource MahApps.Brushes.Control.Disabled}"
                                BorderBrush="{DynamicResource MahApps.Brushes.Control.Disabled}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding Controls:ControlsHelper.CornerRadius}"
                                IsHitTestVisible="False"
                                Opacity="0"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:TextBoxHelper.ButtonsAlignment)}" Value="Left">
                                <Setter TargetName="ButtonColumn" Property="Width" Value="*" />
                                <Setter TargetName="PART_ClearText" Property="Grid.Column" Value="0" />
                                <Setter TargetName="PART_ContentHost" Property="Grid.Column" Value="1" />
                                <Setter TargetName="PART_Message" Property="Grid.Column" Value="1" />
                                <Setter TargetName="TextColumn" Property="Width" Value="Auto" />
                            </DataTrigger>

                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="">
                                <Setter TargetName="PART_Message" Property="Visibility" Value="Visible" />
                            </DataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=IsVisible, RelativeSource={RelativeSource Self}}" Value="True" />
                                    <Condition Binding="{Binding Path=(Controls:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="True" />
                                    <Condition Binding="{Binding Path=(Controls:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.ShowFloatingMessage}" />
                                </MultiDataTrigger.EnterActions>
                                <MultiDataTrigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.HideFloatingMessage}" />
                                </MultiDataTrigger.ExitActions>
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:TextBoxHelper.ButtonsAlignment)}" Value="Right" />
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:TextBoxHelper.ClearTextButton)}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="PART_ContentHost" Property="Grid.ColumnSpan" Value="2" />
                                <Setter TargetName="PART_Message" Property="Grid.ColumnSpan" Value="2" />
                            </MultiDataTrigger>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Base" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.MouseOverBorderBrush)}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="0.6" />
                            </Trigger>
                            <Trigger Property="IsReadOnly" Value="True">
                                <Setter TargetName="PART_ClearText" Property="IsEnabled" Value="False" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="Base" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.FocusBorderBrush)}" />
                                <Setter TargetName="PART_FloatingMessage" Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                <Setter TargetName="PART_FloatingMessage" Property="Opacity" Value="1" />
                            </Trigger>
                            <Trigger SourceName="PART_ClearText" Property="IsMouseOver" Value="True">
                                <Setter TargetName="PART_ClearText" Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                                <Setter TargetName="PART_ClearText" Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}" />
                            </Trigger>
                            <Trigger SourceName="PART_ClearText" Property="IsPressed" Value="True">
                                <Setter TargetName="PART_ClearText" Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
                                <Setter TargetName="PART_ClearText" Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
                            </Trigger>

                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Controls:TextBoxHelper.HasText" Value="False" />
                                    <Condition Property="IsFocused" Value="True" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.EnterGotFocus}" />
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.ExitGotFocus}" />
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>

                            <Trigger Property="Controls:TextBoxHelper.HasText" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.EnterHasText}" />
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.ExitHasText}" />
                                </Trigger.ExitActions>
                            </Trigger>

                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsVisible" Value="True" />
                                    <Condition Property="Controls:TextBoxHelper.IsWaitingForData" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_WaitingForDataEffectAdornerDecorator" Property="Visibility" Value="Visible" />
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.WaitingForData}" />
                                </MultiTrigger.EnterActions>
                            </MultiTrigger>
                            <Trigger Property="Controls:TextBoxHelper.IsWaitingForData" Value="False">
                                <Setter TargetName="PART_WaitingForDataEffectAdornerDecorator" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource MahApps.Templates.ValidationError}" />
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <TextBox Text="{Binding AmountBudgeted, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" Grid.Column="0"
                 x:Name="AmountBudgetedTextbox"
                 TextAlignment="Right"
                 GotKeyboardFocus="AmountBudgetedTextbox_GotFocus"
                 PreviewMouseLeftButtonDown="AmountBudgetedTextbox_PreviewMouseLeftButtonDown"
                 UseLayoutRounding="True"
                 BorderBrush="Blue" 
                 BorderThickness="{Binding CategoryRowViewModel.IsFirstCategoryRow, Converter={StaticResource CategoryMonthTextBoxBorderConverter}}" 
                 Style="{StaticResource AmountBudgetedTextboxStyle}" />

        <ctrls:DashedBorder Grid.Column="1" BorderBrush="Gray" BorderThickness="{Binding CategoryRowViewModel.IsFirstCategoryRow, Converter={StaticResource CategoryMonthTextBlockBorderConverter}}">
            <TextBlock HorizontalAlignment="Right" VerticalAlignment="Center" Padding="0 0 5 0" Text="{Binding CategoryMonthView.TransactionsInMonth, StringFormat=C}" 
                       Foreground="{Binding CategoryMonthView.TransactionsInMonth, Converter={StaticResource DecimalToBrushConverter}}"/>
        </ctrls:DashedBorder>

        <ctrls:DashedBorder Grid.Column="2" BorderBrush="Gray" BorderThickness="{Binding CategoryRowViewModel.IsFirstCategoryRow, Converter={StaticResource CategoryMonthTextBlockBorderConverter}}">
            <TextBlock HorizontalAlignment="Right" VerticalAlignment="Center" Padding="0 0 5 0" 
                       Text="{Binding CategoryMonthView.EndBalance, StringFormat=C}" Grid.Column="2" Foreground="{Binding CategoryMonthView.EndBalance, Converter={StaticResource DecimalToBrushConverter}}"/>
        </ctrls:DashedBorder>
    </Grid>
</UserControl>

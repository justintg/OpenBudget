<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:OpenBudget.Presentation.Windows.Controls"
                    xmlns:budEdit="clr-namespace:OpenBudget.Presentation.Windows.Controls.BudgetEditor">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/OpenBudget;component/Resources/Converters.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type controls:PopupButton}" x:Key="NotePopupButton">
        <Setter Property="Content" Value="{Binding}" />
        <Setter Property="OpenPreference" Value="Bottom" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="PopupMargin" Value="-10 -7 0 0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:PopupButton">
                    <Border Background="{TemplateBinding Background}">
                        <iconPacks:PackIconMaterialLight Kind="Note" DockPanel.Dock="Right" 
                                                         VerticalAlignment="Center"
                                                         Foreground="{TemplateBinding Foreground}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="PopupTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid Width="300" Margin="0 0 5 5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="155" />
                        </Grid.RowDefinitions>

                        <Path Grid.Row="0" Margin="3 0 0 -1" Data="M 0,15 L 15,0 30,15 Z" Fill="LightBlue">
                        </Path>

                        <Border Grid.Row="1" Background="LightBlue" CornerRadius="5">
                            <Border.Effect>
                                <DropShadowEffect Opacity="0.5"/>
                            </Border.Effect>
                        </Border>
                        <Grid Grid.Row="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <TextBox Margin="10 12 10 0" x:Name="focusElement"
                                         Height="100"
                                         Text="{Binding NewNoteText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                         TextOptions.TextFormattingMode="Display"
                                         TextWrapping="NoWrap"
                                         VerticalScrollBarVisibility="Auto"
                                         HorizontalScrollBarVisibility="Auto"
                                         AcceptsReturn="True"/>
                            <Button Content="Save Note" Grid.Row="1" Command="{Binding SaveCategoryNoteCommand}" HorizontalAlignment="Left" Margin="10 5 10 0" />
                        </Grid>

                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="CategoryPopupTemplate">
        <Grid Width="200" Margin="0 0 5 0">
            <Grid.RowDefinitions>
                <RowDefinition Height="85" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Border Background="LightBlue" CornerRadius="5">
                <Border.Effect>
                    <DropShadowEffect Opacity="0.5"/>
                </Border.Effect>
            </Border>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TextBox Margin="10 12 10 0" Text="{Binding NewCategoryName}" x:Name="focusElement"/>
                <Button Content="Save" Grid.Row="1" Width="50" HorizontalAlignment="Left" Margin="10 5 10 0" Command="{Binding SaveCategoryNameCommand}"/>
            </Grid>

            <Path Grid.Row="1" Margin="0 -1 0 0" Data="M 10,0 L 16,10 22,0 Z" Fill="LightBlue">
                <Path.Effect>
                    <DropShadowEffect Opacity="0.5" />
                </Path.Effect>
            </Path>
        </Grid>
    </DataTemplate>

    <ControlTemplate TargetType="{x:Type budEdit:BudgetEditorCategoryRow}" x:Key="CategoryRowTemplate">
        <Border Background="{TemplateBinding Background}">
            <StackPanel Orientation="Horizontal">
                <controls:PopupButton Content="{Binding}"
                                              x:Name="CategoryHeaderPopupButton"
                                              Foreground="Black"                                             
                                              FontWeight="Normal"
                                              IsPopupOpen="{Binding CategoryEditorOpen, Mode=TwoWay}"
                                                  PopupMargin="10 0 0 0"
                                              Width="{Binding Path=CategoryColumnWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type budEdit:BudgetEditor}}}"
                                              PopupTemplate="{StaticResource CategoryPopupTemplate}">
                    <controls:PopupButton.Template>
                        <ControlTemplate TargetType="controls:PopupButton">
                            <DockPanel>
                                <controls:PopupButton DockPanel.Dock="Right"
                                                              x:Name="CategoryNoteButton"
                                                              Style="{StaticResource NotePopupButton}" 
                                                              Margin="0 0 3 0"
                                                              Foreground="Gray"
                                                              IsPopupOpen="{Binding CategoryNoteEditorOpen, Mode=TwoWay}">
                                    <controls:PopupButton.Visibility>
                                        <MultiBinding Converter="{StaticResource BooleanOrVisibilityConveter}">
                                            <Binding Path="IsMouseOver" ElementName="CategoryHeaderPopupButton" />
                                            <Binding Path="IsPopupOpen" RelativeSource="{RelativeSource Self}" />
                                            <Binding Path="HasCategoryNote" />
                                        </MultiBinding>
                                    </controls:PopupButton.Visibility>
                                </controls:PopupButton>

                                <TextBlock Text="{Binding Category.Name}" VerticalAlignment="Center"/>
                            </DockPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="CategoryNoteButton" Property="Foreground" Value="Black" />
                                </Trigger>
                                <Trigger Property="IsPopupOpen" SourceName="CategoryNoteButton" Value="True">
                                    <Setter TargetName="CategoryNoteButton" Property="Foreground" Value="Black" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </controls:PopupButton.Template>
                </controls:PopupButton>
                <ItemsPresenter />
            </StackPanel>
        </Border>
    </ControlTemplate>

    <Style TargetType="{x:Type budEdit:BudgetEditorCategoryRow}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource CategoryRowMouseOverBrush}" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Background" Value="White" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template" Value="{StaticResource CategoryRowTemplate}"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <budEdit:BudgetEditorCategoryMonth
                        Width="{Binding Path=MonthColumnWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type budEdit:BudgetEditor}}}">
                        <budEdit:BudgetEditorCategoryMonth.Margin>
                            <MultiBinding Converter="{StaticResource BudgetEditorMonthMarginConverter}">
                                <Binding Path="BudgetMonthViewModel.IsFirstVisibleMonth"/>
                                <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type budEdit:BudgetEditor}}" />
                            </MultiBinding>
                        </budEdit:BudgetEditorCategoryMonth.Margin>
                    </budEdit:BudgetEditorCategoryMonth>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>